extends layout

block content
  table(align='center' style='width=60%')
    tr
      th
        img(src='/images/dogtailwag.gif' height='40px')
      th(style='text-align: left')
        h1 Welcome to #{title}

  script(src='https://sdk.amazonaws.com/js/aws-sdk-2.41.0.min.js')
  style(language='text/css').
    input#wisdom {
      padding: 4px;
      font-size: 1em;
      width: 400px
    }

    input::placeholder {
      color: #ccc;
      font-style: italic;
    }

    p.userRequest {
      margin: 4px;
      padding: 4px 10px 4px 10px;
      border-radius: 4px;
      min-width: 50%;
      max-width: 85%;
      float: left;
      background-color: Turquoise;
    }

    p.lexResponse {
      margin: 4px;
      padding: 4px 10px 4px 10px;
      border-radius: 4px;
      text-align: right;
      min-width: 50%;
      max-width: 85%;
      float: right;
      background-color: lightcyan;
      font-style: italic;
    }

    p.lexError {
      margin: 4px;
      padding: 4px 10px 4px 10px;
      border-radius: 4px;
      text-align: right;
      min-width: 50%;
      max-width: 85%;
      float: right;
      background-color: lavender;
    }
  body
    div(align='center')
      h3 Wonder why your insurance premium has changed?
      p(style='width: 400px')
      p Let us help you find out the reason!

      #conversation(style='width: 400px; height: 400px; border: 1px solid #ccc; background-color: PaleTurquoise; padding: 4px; overflow: scroll')
      form#chatform(style='margin-top: 10px', onsubmit='return pushChat();')
        input#wisdom(type='text', size='80', value='', placeholder='Why has my premium changed?')
      script(type='text/javascript').
        // set the focus to the input box
        document.getElementById("wisdom").focus();
        // Initialize the Amazon Cognito credentials provider
        AWS.config.region = 'us-east-1'; // Region
        AWS.config.credentials = new AWS.CognitoIdentityCredentials({
          // Provide your Pool Id here
          IdentityPoolId: 'us-east-1:b4bd9b07-a698-4afc-8ee8-ea593596b260',
        });
        var lexruntime = new AWS.LexRuntime();
        var lexUserId = 'chatbot-demo' + Date.now();
        var sessionAttributes = {};

        function pushChat() {
        // if there is text to be sent...
        var wisdomText = document.getElementById('wisdom');
        if (wisdomText && wisdomText.value && wisdomText.value.trim().length > 0) {
        // disable input to show we're sending it
        var wisdom = wisdomText.value.trim();
        wisdomText.value = '...';
        wisdomText.locked = true;
        // send it to the Lex runtime
        var params = {
        botAlias: 'petBot',
        botName: 'petBot',
        inputText: wisdom,
        userId: lexUserId,
        sessionAttributes: sessionAttributes
        };
        showRequest(wisdom);
        lexruntime.postText(params, function(err, data) {
        if (err) {
        console.log(err, err.stack);
        showError('Sorry, our developers have messed up somewhere. Please try entering that again.')
        }
        if (data) {
        // capture the sessionAttributes for the next cycle
        sessionAttributes = data.sessionAttributes;
        // show response and/or error/dialog status
        showResponse(data);
        }
        // re-enable input
        wisdomText.value = '';
        wisdomText.locked = false;
        });
        }
        // we always cancel form submission
        return false;
        }

        function showRequest(daText) {
          var conversationDiv = document.getElementById('conversation');
          var requestPara = document.createElement("P");
          requestPara.className = 'userRequest';
          requestPara.appendChild(document.createTextNode(daText));
          conversationDiv.appendChild(requestPara);
          conversationDiv.scrollTop = conversationDiv.scrollHeight;
        }
        function showError(daText) {
          var conversationDiv = document.getElementById('conversation');
          var errorPara = document.createElement("P");
          errorPara.className = 'lexError';
          errorPara.appendChild(document.createTextNode(daText));
          conversationDiv.appendChild(errorPara);
          conversationDiv.scrollTop = conversationDiv.scrollHeight;
        }
        function showResponse(lexResponse) {
          var conversationDiv = document.getElementById('conversation');
          var responsePara = document.createElement("P");
          responsePara.className = 'lexResponse';
          if (lexResponse.message) {
            responsePara.appendChild(document.createTextNode(lexResponse.message));
            responsePara.appendChild(document.createElement('br'));
          }
          conversationDiv.appendChild(responsePara);
          conversationDiv.scrollTop = conversationDiv.scrollHeight;

        }

